name: Build, push, and deploy

on:
  push:
    paths-ignore:
      - '.nais/redis.yaml'
      - '.nais/qa-redis.yaml'
      - '.github/workflows/redis.yaml'

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  CI: true
  TZ: Europe/Oslo

jobs:
  build:
    name: Test and build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.13.1'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
      - name: Build
        run: |
          npm run build


  build-and-push:
    name: Build and push Docker container
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.13.1'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
      - name: Build
        run: |
          npm run build
          npm run upload-sourcemaps
      - name: Publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: personoversikt
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-qa:
    name: Deploy to preprod
    needs: build-and-push
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        q_env: [q0, q1]
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/qa-template.yaml
          VAR: q_env=${{ matrix.q_env }},version=${{github.sha}},image=${{ needs.build-and-push.outputs.image }}

  deploy-prod:
    name: Deploy to prod
    needs: build-and-push
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          PRINT_PAYLOAD: true
          CLUSTER: prod-fss
          RESOURCE: .nais/prod.yaml
          VAR: version=${{github.sha}},image=${{ needs.build-and-push.outputs.image }}
